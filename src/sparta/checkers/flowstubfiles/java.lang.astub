
package java.lang;



class String {
//Added for Misc. Test SOM
   @PolySources @PolySinks char charAt(@PolySources @PolySinks int index) @PolySources @PolySinks;
   @PolySources @PolySinks boolean contains(@PolySources @PolySinks CharSequence cs) @PolySources @PolySinks;
   @PolySources @PolySinks boolean equals(@PolySources @PolySinks Object object) @PolySources @PolySinks;
   @PolySources @PolySinks boolean equalsIgnoreCase(@PolySources @PolySinks String string) @PolySources @PolySinks;
   static @PolySources @PolySinks String format(Locale l, @PolySources @PolySinks String format, @PolySources @PolySinks Object... args);
   static @PolySources @PolySinks String format(@PolySources @PolySinks String format, @PolySources @PolySinks Object... args);
   @PolySources @PolySinks byte @Sources({}) @Sinks({}) [] getBytes() @PolySources @PolySinks;
   @PolySources @PolySinks int length() @PolySources @PolySinks;
   @PolySources @PolySinks String trim() @PolySources @PolySinks;
   @PolySources @PolySinks String replace(@Sinks({}) char target, @PolySources @PolySinks char replacement) @PolySources @PolySinks;
   @PolySources @PolySinks String replace(@Sinks({}) CharSequence target,
   @PolySources @PolySinks CharSequence replacement) @PolySources @PolySinks;
   @PolySources @PolySinks String substring(@PolySources @PolySinks int start, @PolySources @PolySinks int end) @PolySources @PolySinks;
   @PolySources @PolySinks String substring(@PolySources @PolySinks int start) @PolySources @PolySinks;
   @PolySources @PolySinks String toString() @PolySources @PolySinks;

}

