
package android.util;

class FloatMath {
//Added by SOM
   static @PolySources @PolySinks float ceil(@PolySources @PolySinks float value);
   static @PolySources @PolySinks float cos(@PolySources @PolySinks float angle);
   static @PolySources @PolySinks float floor(@PolySources @PolySinks float value);
   static @PolySources @PolySinks float sin(@PolySources @PolySinks float angle);
   static @PolySources @PolySinks float sqrt(@PolySources @PolySinks float value);
}


class Log {
//Added by SOM

static @Sources(FlowSource.LOG) @Sinks(FlowSink.ANY) int	 d(@Sources(FlowSource.ANY) @Sinks(FlowSink.LOG) String tag,@Sources(FlowSource.ANY)  @Sinks(FlowSink.LOG) String msg);
static @Sources(FlowSource.LOG) @Sinks(FlowSink.ANY)  int	 d(@Sources(FlowSource.ANY) @Sinks(FlowSink.LOG) String tag,@Sources(FlowSource.ANY)  @Sinks(FlowSink.LOG) String msg, @Sources(FlowSource.ANY) @Sinks(FlowSink.LOG) Throwable tr);
static @Sources(FlowSource.LOG) @Sinks(FlowSink.ANY)  int	 e(@Sources(FlowSource.ANY) @Sinks(FlowSink.LOG) String tag,@Sources(FlowSource.ANY)  @Sinks(FlowSink.LOG) String msg);
static @Sources(FlowSource.LOG) @Sinks(FlowSink.ANY)  int	 e(@Sources(FlowSource.ANY) @Sinks(FlowSink.LOG) String tag, @Sources(FlowSource.ANY) @Sinks(FlowSink.LOG) String msg, @Sources(FlowSource.ANY) @Sinks(FlowSink.LOG) Throwable tr);
static @Sources(FlowSource.LOG) @Sinks(FlowSink.ANY)  int	 i(@Sources(FlowSource.ANY) @Sinks(FlowSink.LOG) String tag, @Sources(FlowSource.ANY) @Sinks(FlowSink.LOG) String msg);
static @Sources(FlowSource.LOG) @Sinks(FlowSink.ANY)  int	 i(@Sources(FlowSource.ANY) @Sinks(FlowSink.LOG) String tag, @Sources(FlowSource.ANY) @Sinks(FlowSink.LOG) String msg, @Sources(FlowSource.ANY) @Sinks(FlowSink.LOG) Throwable tr);
static @Sources(FlowSource.LOG) @Sinks(FlowSink.ANY)  int	 v(@Sources(FlowSource.ANY) @Sinks(FlowSink.LOG) String tag,@Sources(FlowSource.ANY)  @Sinks(FlowSink.LOG) String msg);
static @Sources(FlowSource.LOG) @Sinks(FlowSink.ANY)  int	 v(@Sources(FlowSource.ANY) @Sinks(FlowSink.LOG) String tag, @Sources(FlowSource.ANY) @Sinks(FlowSink.LOG) String msg,@Sources(FlowSource.ANY)  @Sinks(FlowSink.LOG) Throwable tr);
static @Sources(FlowSource.LOG)  @Sinks(FlowSink.ANY) int	 w(@Sources(FlowSource.ANY) @Sinks(FlowSink.LOG) String tag,@Sources(FlowSource.ANY)  @Sinks(FlowSink.LOG) Throwable tr);
static @Sources(FlowSource.LOG) @Sinks(FlowSink.ANY)  int	 w(@Sources(FlowSource.ANY) @Sinks(FlowSink.LOG) String tag,@Sources(FlowSource.ANY)  @Sinks(FlowSink.LOG) String msg, @Sources(FlowSource.ANY) @Sinks(FlowSink.LOG) Throwable tr);
static @Sources(FlowSource.LOG) @Sinks(FlowSink.ANY)  int	 w(@Sources(FlowSource.ANY) @Sinks(FlowSink.LOG) String tag, @Sources(FlowSource.ANY) @Sinks(FlowSink.LOG) String msg);
static @Sources(FlowSource.LOG) @Sinks(FlowSink.ANY)  int	 wtf(@Sources(FlowSource.ANY) @Sinks(FlowSink.LOG) String tag,@Sources(FlowSource.ANY)  @Sinks(FlowSink.LOG) Throwable tr);
static @Sources(FlowSource.LOG) @Sinks(FlowSink.ANY)  int	 wtf(@Sources(FlowSource.ANY) @Sinks(FlowSink.LOG) String tag, @Sources(FlowSource.ANY) @Sinks(FlowSink.LOG) String msg);
static @Sources(FlowSource.LOG)  @Sinks(FlowSink.ANY) int	 wtf(@Sources(FlowSource.ANY) @Sinks(FlowSink.LOG) String tag, @Sources(FlowSource.ANY) @Sinks(FlowSink.LOG) String msg,@Sources(FlowSource.ANY)  @Sinks(FlowSink.LOG) Throwable tr);
}
