package android.telephony;

class PhoneNumberUtils {
static boolean compare(Context context, String a, String b);
static boolean compare(String a, String b);
static boolean isWellFormedSmsAddress(String address);
static String formatNumber(String source);
static void formatNumber(Editable text, int defaultFormattingType);
}

class ServiceState {
int getState();
String getOperatorAlphaLong();
}

class SignalStrength {
boolean isGsm();
int getCdmaDbm();
int getGsmBitErrorRate();
int getGsmSignalStrength();
}

class PhoneStateListener{
final int LISTEN_CALL_STATE;
PhoneStateListener();
        void onCallStateChanged(int state, String incomingNumber);
}

class TelephonyManager{
        static final @Source(INTENT) String ACTION_PHONE_STATE_CHANGED;
        static final @Source(INTENT) String EXTRA_STATE_RINGING;
        static final @Source(INTENT) String EXTRA_STATE_OFFHOOK;
        static final @Source(INTENT) String EXTRA_STATE_IDLE;
        static final @Source(INTENT) String EXTRA_STATE;
       final int CALL_STATE_RINGING;
        final int CALL_STATE_IDLE;
        final int CALL_STATE_OFFHOOK;
      @Source(READ_PHONE_STATE) String getDeviceId();
            @Source(READ_PHONE_STATE) String getSimSerialNumber();
            @Source(READ_PHONE_STATE) String getNetworkOperatorName();
            @Source(READ_PHONE_STATE) int getPhoneType();
            @Source(READ_PHONE_STATE) String getLine1Number();
            @Source(READ_PHONE_STATE) int getCallState();
            @Source(READ_PHONE_STATE) String getSubscriberId();
            void listen(PhoneStateListener listener, int events);

}


class SmsManager {

        final int RESULT_ERROR_NO_SERVICE;
        final int RESULT_ERROR_RADIO_OFF;
        final int RESULT_ERROR_NULL_PDU;
        final int RESULT_ERROR_GENERIC_FAILURE;


ArrayList<String> divideMessage(String text);
//Divide a message text into several fragments, none bigger than the maximum SMS message size.

static SmsManager getDefault();
//Get the default instance of the SmsManager

void sendDataMessage(@Sink(SEND_SMS) String destinationAddress, @Sink(SEND_SMS) String scAddress, @Sink(SEND_SMS) short destinationPort, @Sink(SEND_SMS) byte[] data, PendingIntent sentIntent, PendingIntent deliveryIntent);
//Send a data based SMS to a specific application port.

void sendMultipartTextMessage(@Sink(SEND_SMS) String destinationAddress, @Sink(SEND_SMS) String scAddress, @Sink(SEND_SMS) ArrayList<String> parts, ArrayList<PendingIntent> sentIntents, ArrayList<PendingIntent> deliveryIntents);
//Send a multi-part text based SMS.

void sendTextMessage(@Sink(SEND_SMS) String destinationAddress, @Sink(SEND_SMS) String scAddress, @Sink(SEND_SMS) String text, PendingIntent sentIntent, PendingIntent deliveryIntent);
//Send a text based SMS.



}


class SmsMessage{
//Add by SOM
        @Source(READ_SMS) String getMessageBody();
        static SmsMessage createFromPdu(@Sink(WRITE_SMS) byte @Sink(WRITE_SMS)[] pdu);
       @Source(READ_EMAIL) String getDisplayOriginatingAddress();
       @Source(READ_EMAIL) String getEmailBody();
        boolean isEmail();
        @Source(READ_EMAIL) String getEmailFrom();
        @Source(READ_SMS) long getTimestampMillis();
         @Source(READ_SMS) String getServiceCenterAddress();
           @Source(READ_SMS) String getOriginatingAddress();
           @Source(READ_SMS) String getDisplayMessageBody();

}
