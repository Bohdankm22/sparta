package java.math;

@PolyFlowReceiver
class BigDecimal extends Number implements Comparable<BigDecimal> {
    final BigDecimal ZERO;
    final BigDecimal ONE;
    final BigDecimal TEN;
    final int ROUND_UP;
    final int ROUND_DOWN;
    final int ROUND_CEILING;
    final int ROUND_FLOOR;
    final int ROUND_HALF_UP;
    final int ROUND_HALF_DOWN;
    final int ROUND_HALF_EVEN;
    final int ROUND_UNNECESSARY;
    BigDecimal(char[] arg0, int arg1, int arg2);
    BigDecimal(char[] arg0, int arg1, int arg2, MathContext arg3);
    BigDecimal(char[] arg0);
    BigDecimal(char[] arg0, MathContext arg1);
    BigDecimal(String arg0);
    BigDecimal(String arg0, MathContext arg1);
    BigDecimal(double arg0);
    BigDecimal(double arg0, MathContext arg1);
    BigDecimal(BigInteger arg0);
    BigDecimal(BigInteger arg0, MathContext arg1);
    BigDecimal(BigInteger arg0, int arg1);
    BigDecimal(BigInteger arg0, int arg1, MathContext arg2);
    BigDecimal(int arg0);
    BigDecimal(int arg0, MathContext arg1);
    BigDecimal(long arg0);
    BigDecimal(long arg0, MathContext arg1);
    static BigDecimal valueOf(long arg0, int arg1);
    static BigDecimal valueOf(long arg0);
    static BigDecimal valueOf(double arg0);
    BigDecimal add(BigDecimal arg0);
    BigDecimal add(BigDecimal arg0, MathContext arg1);
    BigDecimal subtract(BigDecimal arg0);
    BigDecimal subtract(BigDecimal arg0, MathContext arg1);
    BigDecimal multiply(BigDecimal arg0);
    BigDecimal multiply(BigDecimal arg0, MathContext arg1);
    BigDecimal divide(BigDecimal arg0, int arg1, int arg2);
    BigDecimal divide(BigDecimal arg0, int arg1, RoundingMode arg2);
    BigDecimal divide(BigDecimal arg0, int arg1);
    BigDecimal divide(BigDecimal arg0, RoundingMode arg1);
    BigDecimal divide(BigDecimal arg0);
    BigDecimal divide(BigDecimal arg0, MathContext arg1);
    BigDecimal divideToIntegralValue(BigDecimal arg0);
    BigDecimal divideToIntegralValue(BigDecimal arg0, MathContext arg1);
    BigDecimal remainder(BigDecimal arg0);
    BigDecimal remainder(BigDecimal arg0, MathContext arg1);
    BigDecimal[] divideAndRemainder(BigDecimal arg0);
    BigDecimal[] divideAndRemainder(BigDecimal arg0, MathContext arg1);
    BigDecimal pow(int arg0);
    BigDecimal pow(int arg0, MathContext arg1);
    BigDecimal abs();
    BigDecimal abs(MathContext arg0);
    BigDecimal negate();
    BigDecimal negate(MathContext arg0);
    BigDecimal plus();
    BigDecimal plus(MathContext arg0);
    int signum();
    int scale();
    int precision();
    BigInteger unscaledValue();
    BigDecimal round(MathContext arg0);
    BigDecimal setScale(int arg0, RoundingMode arg1);
    BigDecimal setScale(int arg0, int arg1);
    BigDecimal setScale(int arg0);
    BigDecimal movePointLeft(int arg0);
    BigDecimal movePointRight(int arg0);
    BigDecimal scaleByPowerOfTen(int arg0);
    BigDecimal stripTrailingZeros();
    int compareTo(BigDecimal arg0);
    boolean equals(Object arg0);
    BigDecimal min(BigDecimal arg0);
    BigDecimal max(BigDecimal arg0);
    int hashCode();
    String toString();
    String toEngineeringString();
    String toPlainString();
    BigInteger toBigInteger();
    BigInteger toBigIntegerExact();
    long longValue();
    long longValueExact();
    int intValue();
    int intValueExact();
    short shortValueExact();
    byte byteValueExact();
    float floatValue();
    double doubleValue();
    BigDecimal ulp();
}

@PolyFlowReceiver
class BigInteger extends Number implements Comparable<BigInteger> {
    final BigInteger ZERO;
    final BigInteger ONE;
    final BigInteger TEN;
    BigInteger(byte[] arg0);
    BigInteger(int arg0, byte[] arg1);
    BigInteger(String arg0, int arg1);
    BigInteger(String arg0);
    BigInteger(int arg0, Random arg1);
    BigInteger(int arg0, int arg1, Random arg2);
    static BigInteger probablePrime(int arg0, Random arg1);
    BigInteger nextProbablePrime();
    static BigInteger valueOf(long arg0);
    BigInteger add(BigInteger arg0);
    BigInteger subtract(BigInteger arg0);
    BigInteger multiply(BigInteger arg0);
    BigInteger divide(BigInteger arg0);
    BigInteger[] divideAndRemainder(BigInteger arg0);
    BigInteger remainder(BigInteger arg0);
    BigInteger pow(int arg0);
    BigInteger gcd(BigInteger arg0);
    BigInteger abs();
    BigInteger negate();
    int signum();
    BigInteger mod(BigInteger arg0);
    BigInteger modPow(BigInteger arg0, BigInteger arg1);
    BigInteger modInverse(BigInteger arg0);
    BigInteger shiftLeft(int arg0);
    BigInteger shiftRight(int arg0);
    BigInteger and(BigInteger arg0);
    BigInteger or(BigInteger arg0);
    BigInteger xor(BigInteger arg0);
    BigInteger not();
    BigInteger andNot(BigInteger arg0);
    boolean testBit(int arg0);
    BigInteger setBit(int arg0);
    BigInteger clearBit(int arg0);
    BigInteger flipBit(int arg0);
    int getLowestSetBit();
    int bitLength();
    int bitCount();
    boolean isProbablePrime(int arg0);
    int compareTo(BigInteger arg0);
    boolean equals(Object arg0);
    BigInteger min(BigInteger arg0);
    BigInteger max(BigInteger arg0);
    int hashCode();
    String toString(int arg0);
    String toString();
    byte[] toByteArray();
    int intValue();
    long longValue();
    float floatValue();
    double doubleValue();
}