
package android.location;

class Address{
            void setPostalCode(String postalCode);
            String getAddressLine(int index);
            String getPostalCode();
            double getLatitude();
            void setCountryCode(String countryCode);
            int getMaxAddressLineIndex();
            double getLongitude();
            Address(Locale locale);
            void setAdminArea(String adminArea);
            void setAddressLine(int index, String line);
            String getCountryCode();
            Locale getLocale();
                   String getLocality();
            String getAdminArea();
}

class Geocoder {
            Geocoder(Context context, Locale locale);
    @Source(FlowPermission.ANY) @Sink({}) Geocoder(@Source(FlowPermission.ANY) @Sink({}) Context context);
    @Source(FlowPermission.ACCESS_FINE_LOCATION) List<@Source(FlowPermission.ACCESS_FINE_LOCATION) Address> getFromLocationName(@Source(FlowPermission.ANY) @Sink({}) String locationName, @Source(FlowPermission.ANY) @Sink({}) int maxResults);
     static boolean isPresent();
            List<Address> getFromLocation(double latitude, double longitude, int maxResults) throws IOException;
}

 interface LocationListener {
//Added by SOM
        void onLocationChanged(@Source({FlowPermission.ACCESS_FINE_LOCATION, FlowPermission.ACCESS_COARSE_LOCATION}) Location location);
        void onStatusChanged(String arg0, int arg1, @Source(FlowPermission.ANY) Bundle arg2);
        void onProviderEnabled(String arg0);
        void onProviderDisabled(String arg0);
 }




class LocationManager{

            List<String> getAllProviders();
            void requestLocationUpdates(String provider, long minTime, float minDistance, LocationListener listener);
            @Source({ACCESS_COARSE_LOCATION, ACCESS_FINE_LOCATION}) Location getLastKnownLocation(String provider);
}
class Location{
            void setLatitude(double latitude);
            String getProvider();
            void setLongitude(double longitude);
            float distanceTo(Location dest);
            Location(String provider);
            float getAccuracy();
            long getTime();
            double getLatitude();
                        double getLongitude();

}

