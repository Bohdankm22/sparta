condition.flow=sensitive source information found in a conditional. \nfound: %s
forbidden.flow=\nflow forbidden by flow-policy  \nfound: %s \nforbidden flows:\n %s\n
intent.key.notfound=\nKey %s missing from @IntentMap annotation of %s!
send.intent=\nForbidden communication. \n Intent type found: %s. \n Intent type required: %s. \n
intent.key.variable=\nKey %s cannot be resolved at compile time.\n
intent.receiver.notfound=\nCould not find receivers for class: %s\n
intent.receiveintent.notfound=\nCould not find receiveIntent method %s used by this sendIntent call.\n
intent.getintent.notfound=\nCould not find getIntent() method implementation in the same component of this setIntent call. Please override this method and make sure that the return type of getIntent() is a supertype of the setIntent(intent) parameter. \n
intent.getintent.setintent=\ngetIntent() return type must be a supertype of setIntent(intent) parameter. \n setIntent(intent) parameter type found: %s. \n getIntent() return type found: %s. \n
intent.override.receiveintent=This method overrides a method that might be invoked using an intent. \nPlease add the following annotation:\n%s 
intent.override.receiveintent.incorrect=Incorrect ReceiveIntent annotation. \nPlease use the following annotation:\n%s  
intent.override.sendintent=This method overrides a method that might invoke another method with an intent. \nPlease add the following annotation:\n%s 
intent.override.sendintent.incorrect=Incorrect SendIntent annotation. \nPlease use the following annotation:\n%s  
intent.invoking.receiveintent=A ReceiveIntent method is being invoked. It should only be invoked by Android internal methods as it is a callback method.\n

intent.error=\n %s \n

