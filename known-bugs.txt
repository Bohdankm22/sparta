-The ant targets do not work if their is a space anywhere in your project path.
- Local variable inference does not happen on element types of arrays.  

Example:   
void callStart(@FlowSources(FlowSource.NETWORK) @FlowSinks(FlowSink.NETWORK) Object [] result) {}

@FlowSinks(FlowSink.NETWORK) Object [] getObjs() { return null;}

void foo()
{
   Object [] other = getObjs();
   callStart(getObjs());
}

//Policy File NETWORK->NETWORK

ArrayCast.java:25: error: incompatible types in assignment.
        Object [] other = getObjs();
                                 ^
  found   : @FlowSinks(FlowSink.NETWORK) @FlowSources(NETWORK) Object @FlowSinks(CONDITIONAL) @FlowSources(LITERAL) []
  required: @FlowSinks(CONDITIONAL) @FlowSources(LITERAL) Object @FlowSinks(CONDITIONAL) @FlowSources(LITERAL) []

This isn't a problem with the Checker Framework.  The following type checks:

    void demo() {
    	@NonNull String @NonNull [] s3 = new String[] { "hello", "you", "goodbye" };
        String[] s2 = s3;
    	foo(s2);
    	foo(s3);
    	
    }
    void foo(  @NonNull String @NonNull [] s3 ) {

    